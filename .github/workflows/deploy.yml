name: Deploy Infra + Config

on: 
  workflow_dispatch:

jobs:
  Terraform:
    runs-on: ubuntu-latest

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve

    - name: Get IP from Terraform output
      id: get_ip
      working-directory: ./terraform
      run: |
        echo "INSTANCE_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV

    - name: Récupérer la clé privée depuis les secrets
      run: |
        mkdir -p ssh
        echo "${{ secrets.GCP_SSH_KEY }}" > ssh/gcp
        chmod 600 ssh/gcp

    - name: Générer le fichier inventory.ini dynamique
      run: |
        echo "[kube]" > ansible/inventory.ini
        echo "$INSTANCE_IP ansible_user=admin ansible_ssh_private_key_file=$(pwd)/ssh/gcp-deploy-key ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini
        cat ansible/inventory.ini

    - uses: actions/upload-artifact@v4
      with:
        name: ansible
        path: ansible/inventory.ini

  Ansible:
    runs-on: ubuntu-latest
    needs: [Terraform]

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4
      with:
        name: ansible

    - name: Récupérer la clé privée depuis les secrets
      run: |
        mkdir -p ssh
        echo "${{ secrets.GCP_SSH_KEY }}" > ./ssh/gcp-deploy-key
        chmod 600 ./ssh/gcp-deploy-key

    - name: Set up Python and Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Wait for the instance to be ready
      run: sleep 30

    - name: Run Ansible Playbook
      run: |
        cd ansible
        sudo ansible-playbook -i inventory kube.yml
